-- 1.
SELECT o.pet_id, date
FROM owners AS o LEFT OUTER JOIN transactions AS t
ON o.pet_id = t.pet_id
WHERE date IS NULL;


-- 2. 
SELECT DISTINCT date, COUNT(transaction_id) AS count_transactions
FROM transactions
GROUP BY date
ORDER BY COUNT(transaction_id) DESC;


-- 3.
SELECT owner_id, SUM(visits_count) AS visits_count
FROM owners AS o LEFT OUTER JOIN visits AS v
ON o.pet_id = v.pet_id
GROUP BY owner_id;

-- 4.
SELECT t1.pet_id, COUNT(t2.transaction_id) AS count_transactions
FROM transactions AS t1 LEFT OUTER JOIN transactions AS t2
ON t1.transaction_id = t2.transaction_id
GROUP BY t1.pet_id
HAVING COUNT(t2.transaction_id) >= 3;

-- 5.
SELECT service, COUNT(transaction_id)
FROM transactions AS t LEFT OUTER JOIN owners AS o
ON t.pet_id = o.pet_id
WHERE size = 'large'
GROUP BY service
ORDER BY COUNT(transaction_id) DESC
LIMIT 1;


--6.
SELECT owner_id, SUM(visits_count) AS total_visits
FROM owners AS o LEFT OUTER JOIN visits AS v
ON o.pet_id = v.pet_id
GROUP BY owner_id
HAVING SUM(visits_count) > 10;

7.
SELECT owner_id
FROM owners 
UNION 
SELECT owner_id
FROM owners_2
ORDER BY owner_id;


8.
SELECT MIN(owner_id), MAX(owner_id) FROM
    (SELECT owner_id
    FROM owners 
    UNION 
    SELECT owner_id
    FROM owners_2) AS min_max_owner;
